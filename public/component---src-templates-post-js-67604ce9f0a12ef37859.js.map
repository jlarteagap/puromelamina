{"version":3,"sources":["webpack:///./src/templates/post.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["PostTemplate","render","post","this","props","data","wordpressPost","dangerouslySetInnerHTML","__html","title","content","Component","pageQuery","Header","siteTitle","style","background","marginBottom","margin","maxWidth","padding","to","color","textDecoration","defaultProps","Layout","children","useStaticQuery","site","siteMetadata","marginTop","Date","getFullYear","href"],"mappings":"+LAKMA,E,kGACFC,OAAA,WACI,IAAMC,EAAOC,KAAKC,MAAMC,KAAKC,cAG7B,OACI,kBAAC,IAAD,KACI,wBAAIC,wBAAyB,CAAEC,OAAQN,EAAKO,SAC5C,yBAAKF,wBAAyB,CAAEC,OAAQN,EAAKQ,a,GARlCC,aAmBZX,YAGR,IAAMY,EAAS,a,gGCvBhBC,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,4BACEC,MAAO,CACLC,WAAW,gBACXC,aAAa,YAGf,yBACEF,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,sBAGV,wBAAIL,MAAO,CAAEG,OAAQ,IACnB,kBAAC,OAAD,CACEG,GAAG,IACHN,MAAO,CACLO,MAAM,QACNC,eAAe,SAGhBT,OAWXD,EAAOW,aAAe,CACpBV,UAAU,IAGGD,Q,UCaAY,IAxCA,SAAC,GAAkB,IAAD,EAAfC,EAAe,EAAfA,SACVrB,EAAOsB,yBAAe,cAU5B,OACE,oCACE,kBAAC,EAAD,CAAQb,WAAW,UAAAT,EAAKuB,KAAKC,oBAAV,eAAwBpB,QAAxB,UACnB,yBACEM,MAAO,CACLG,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOM,GACP,4BACEX,MAAO,CACLe,UAAU,SAFd,MAKK,IAAIC,MAAOC,cALhB,mBAOE,uBAAGC,KAAK,4BAAR","file":"component---src-templates-post-js-67604ce9f0a12ef37859.js","sourcesContent":["import { graphql } from 'gatsby';\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport Layout from '../components/layout';\n\nclass PostTemplate extends Component {\n    render() {\n        const post = this.props.data.wordpressPost;\n\n        // STEP #5: Use title and content in Gatsby.\n        return (\n            <Layout>\n                <h1 dangerouslySetInnerHTML={{ __html: post.title }} />\n                <div dangerouslySetInnerHTML={{ __html: post.content }} />\n            </Layout>\n        );\n    }\n}\n\nPostTemplate.propTypes = {\n    data: PropTypes.object.isRequired,\n    edges: PropTypes.array\n};\n\nexport default PostTemplate;\n\n// STEP #4: Get current WP Post data via ID.\nexport const pageQuery = graphql`\n    query($id: String!) {\n        wordpressPost(id: { eq: $id }) {\n            title\n            content\n        }\n    }\n`;","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1.45rem 1.0875rem`,\n      }}\n    >\n      <h1 style={{ margin: 0 }}>\n        <Link\n          to=\"/\"\n          style={{\n            color: `white`,\n            textDecoration: `none`,\n          }}\n        >\n          {siteTitle}\n        </Link>\n      </h1>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: 960,\n          padding: `0 1.0875rem 1.45rem`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `2rem`,\n          }}\n        >\n          Â© {new Date().getFullYear()}, Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n"],"sourceRoot":""}